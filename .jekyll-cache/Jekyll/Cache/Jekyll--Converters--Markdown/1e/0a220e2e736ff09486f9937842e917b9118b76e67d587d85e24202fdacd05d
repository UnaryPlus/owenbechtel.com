I"<h2 id="multifunge">Multifunge</h2>

<p>Multifunge is an esoteric programming language inspired by Asciidots and Befunge.
You can download the interpreter on <a href="https://github.com/UnaryPlus/multifunge">Github</a>.</p>

<p><code class="language-plaintext highlighter-rouge">@</code> marks the starting location of an instruction pointer in the code. Instruction pointers always start moving right, but can also move left, up, or down. Each instruction pointer has a value, which starts at 0. When a pointer reaches a command character, the associated command is executed.</p>

<ul>
  <li><code class="language-plaintext highlighter-rouge">x</code> deletes the pointer. (They are also deleted if they leave the boundaries of the program.)
; ends the program by deleting all pointers.
^ causes the pointer to move up.
v causes the pointer to move down.
&lt; causes the pointer to move left.
    <blockquote>
      <p>causes the pointer to move right.
/ and \ duplicate the pointer. You can think of them as semi-transparent mirrors. One copy of the pointer keeps going forward, and the other copy “bounces off.”</p>
    </blockquote>
  </li>
  <li>creates two new copies of the pointer moving perpendicular to the original.</li>
  <li>increments the pointer’s value.</li>
  <li>decrements the pointer’s value.
~ negates the pointer’s value.
    <h1 id="resets-the-pointers-value-to-0">resets the pointer’s value to 0.</h1>
    <p>Any digit 0-9 multiplies the pointer’s value by 10 and then adds the given digit. This basically just appends the digit to the end of the value.
! prints the pointer’s value.
? waits for the user to enter a value, and then sets the pointer to that value.
“ prints every character until the next quote.
. prints a newline.
c puts the pointer in character mode. While in character mode, the ? and ! commands input and output single characters rather than integers, and the pointer’s value is treated as an ascii code.
i puts the pointer back in integer mode.
Other characters are ignored by the interpreter.</p>
  </li>
</ul>
:ET